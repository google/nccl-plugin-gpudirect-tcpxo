module(
    name = "fastrak-guest",
    version = "1.0.0",
    repo_name = "fastrak_guest",
)

http_archive = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "ortools",
    sha256 = "de7a743c8ec097ab8906c1e00ea782ee8a4fe4ec297e15d7bdf3a187b2f8829c",
    strip_prefix = "or-tools-9.12",
    url = "https://github.com/google/or-tools/archive/refs/tags/v9.12.tar.gz",
)

http_archive(
    name = "webrtc_build",
    build_file_content = """
# Group the sources of the library so that CMake rule have access to it
filegroup(
    name = "all_srcs",
    srcs = glob(["*.sh"], exclude = ["build/**"]),
    visibility = ["//visibility:public"],
)
    """,
    patch_strip = 1,
    patches = ["//patches:webrtc.patch"],
    sha256 = "7c3c008dcd90cc338fd3b408c740b9a547b75f2b5464b86dddc55a2f3d887f7e",
    strip_prefix = "webrtcbuilds-4bc7a6b7006e2bbe514aac6570c2b85c331e08e9",
    url = "https://github.com/vsimon/webrtcbuilds/archive/4bc7a6b.zip",
)

http_archive(
    name = "json",
    add_prefix = "json",
    sha256 = "4b92eb0c06d10683f7447ce9406cb97cd4b453be18d7279320f7b2f025c10187",
    strip_prefix = "json-3.12.0",
    url = "https://github.com/nlohmann/json/archive/refs/tags/v3.12.0.tar.gz",
)

http_archive(
    name = "com_google_tensorflow_serving",
    patch_strip = 1,
    patches = ["//patches:tf_serving.patch"],
    sha256 = "6e23788774f241ba980425c7e2a6c89f173ab8739e898ef637f6720c15e53366",
    strip_prefix = "serving-ddaaf0b38604ecc9d49c9e9d2a17df35ade4485a",
    url = "https://github.com/tensorflow/serving/archive/ddaaf0b.zip",
)

http_archive(
    name = "ng-log",
    sha256 = "03a0c7176290f15c3fc1f3826b8ffc2c7a3e9b996b42bc599038fe49546cbe53",
    strip_prefix = "ng-log-0.8.0-rc1",
    url = "https://github.com/ng-log/ng-log/archive/refs/tags/v0.8.0-rc1.tar.gz",
)

http_archive(
    name = "com_github_libevent_libevent",
    build_file = "@com_google_tensorflow_serving//third_party/libevent:BUILD",
    sha256 = "8836ad722ab211de41cb82fe098911986604f6286f67d10dfb2b6787bf418f49",
    strip_prefix = "libevent-release-2.1.12-stable",
    url = "https://github.com/libevent/libevent/archive/release-2.1.12-stable.zip",
)

http_archive(
    name = "ecclesia",
    sha256 = "54ee8a16f2e8df5cf2419b9565469584bcda2543d4dfee7a0b5add7f751e62b7",
    strip_prefix = "ecclesia-machine-management-305a118baa4fbf108f718d98f243cc38e6311daf",
    url = "https://github.com/google/ecclesia-machine-management/archive/305a118.zip",
)

bazel_dep(name = "rules_cc", version = "0.1.1")
bazel_dep(name = "rules_license", version = "1.0.0")
bazel_dep(name = "abseil-cpp", version = "20250127.0", repo_name = "com_google_absl")
bazel_dep(name = "gflags", version = "2.2.2")
bazel_dep(name = "googleapis", version = "0.0.0-20241220-5e258e33.bcr.1")
bazel_dep(name = "googleapis-cc", version = "1.0.0")
bazel_dep(name = "platforms", version = "0.0.11")
bazel_dep(name = "protobuf", version = "30.0")
bazel_dep(name = "rules_cuda", version = "0.2.5")
bazel_dep(name = "zlib", version = "1.3.1.bcr.5")

cuda = use_extension("@rules_cuda//cuda:extensions.bzl", "toolchain")
cuda.local_toolchain(
    name = "local_cuda",
    toolkit_path = "",
)
use_repo(cuda, "local_cuda")

# Override with nullability changes
archive_override(
    module_name = "abseil-cpp",
    integrity = "sha256-4GHBmw1JDdhBemoAacxjD2xORVftIDZ1GgPZ6lN03UE=",
    strip_prefix = "abseil-cpp-7bb1ccb703bcb5a55bb39a4def2c19d85a7eec33",
    url = "https://github.com/abseil/abseil-cpp/archive/7bb1ccb.zip",
)

new_local_repository = use_repo_rule("@bazel_tools//tools/build_defs/repo:local.bzl", "new_local_repository")
new_local_repository(
    name = "nccl",
    build_file = "third_party/nccl/BUILD",
    path = "/usr/local/nccl",
)

new_local_repository(
    name = "cuda_headers",
    build_file = "third_party/cuda_headers/BUILD",
    path = "/usr/local/cuda",
)
